name: CI & Deploy Lawpath-verifier

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run lint (if exists)
        run: npm run lint --if-present

      - name: Run unit tests
        run: npm test --if-present

      - name: Build Next.js app
        run: npm run build
        env:
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          ELASTIC_NODE: ${{ secrets.ELASTIC_NODE }}
          ELASTIC_API_KEY: ${{ secrets.ELASTIC_API_KEY }}
          USER_INDEX: ${{ secrets.USER_INDEX }}
          LOGS_INDEX: ${{ secrets.LOGS_INDEX }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          ELASTIC_NODE: ${{ secrets.ELASTIC_NODE }}
          ELASTIC_API_KEY: ${{ secrets.ELASTIC_API_KEY }}
          USER_INDEX: ${{ secrets.USER_INDEX }}
          LOGS_INDEX: ${{ secrets.LOGS_INDEX }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Deploy Project to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --org ${{ secrets.VERCEL_ORG_ID }} --project ${{ secrets.VERCEL_PROJECT_ID }}

